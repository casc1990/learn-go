package main

/*
常量的定义
	1.常量的值在编译时就已经确定
	2.常量的定义格式与变量基本相同
	3.等号右侧必须是常量或者常量表达式
	4.常量表达式中的函数必须是内置函数
 */

/*
运算符优先级（从高到低）
	^      !(取反)                                               ----（一元运算符）
	*      /    %    <<(左移)    >>(右移)    &(按位与运算符)
	+      -     |(按位或运算符)     ^(按位异或运算符)            ----（二元运算符）--两个值运算
	==   !=   <    <=    >=    >
	<-                                                    ----（专门用于channel）
	&&(逻辑AND运算符)   ||(逻辑OR运算符)                    ---- （逻辑运算符）

特殊运算符说明：
     <<(左移)：向前进n位，即2的n次方  例如：A = 0011 1100； A << 2 结果为 240 ，二进制为 1111 0000
     >>(右移)：向后退n位，原理同上    例如：A = 0011 1100； A >> 2 结果为 15 ，二进制为 0000 1111
     &(按位与运算符)： 两个数分解成2进制进行与运算（比较每一位，都为1，值为1，依次类推，把最终结果在转换为10进制输出）
     |(按位或运算符)： 两个数分解成2进制进行或运算（比较每一位，只要有1，值为1，依次类推，把最终结果在转换为10进制输出）
     ^(按位异或运算符)：两个数分解成2进制进行异或运算（比较每一位，当两对应的二进位相异时，结果为1）
 */
import (
	"fmt"
)

const (
	a string = "abc"
	b  /* b=1，在定义常量组时，如果不提供初始值,将使用上行的表达式的值，如果常量组第一个也没赋值，就报错  */
	c = len(a) /* 结果：3,len函数求字符串长度。*/
	d = "A"
	e
)
const (
	/* 代码规范：定义常量一般都大写或者首字母大写，常量名要通俗易懂  */
	/* iota是常量的计数器，用于常量组中，从0开始，组中每定义1个常量自动递增1;但是每遇到一个const关键字，iota就会重置为0  */
	Monday = iota  /* iota 配合初始化可以达到枚举效果 */
	Tuesday
	Wednesday = 33
	Thursday = iota
	Friday  /* 赋值继承上个表达式：iota，iota又等于到现在常量的个数，所以等于：4 */
	Saturday
	Sunday
)

const (
	/* 计算存储单位占位的字节数，1<<10 =1024，然后配合iota  */
	_ = iota
	KB float64 = 1 << (iota * 10)
	MB
	GB
	TB
	PB

)
var (

)

func main()  {
	fmt.Println(a,b,c,d,e)
	fmt.Println(Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday)  /* 结果：0 1 33 3 4 5 6  */
	fmt.Println(KB,GB,TB,PB)
}